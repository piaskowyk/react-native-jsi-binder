(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{112:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return d}));var a=t(3),i=t(8),r=(t(0),t(346)),o={id:"declarative",title:"Declarative Animation API",sidebar_label:"Declarative Animation API"},s={unversionedId:"declarative",id:"version-1.x.x/declarative",isDocsHomePage:!1,title:"Declarative Animation API",description:"Invoking animation differs from the way it is done when using the original Animated API.",source:"@site/versioned_docs/version-1.x.x/declarative.md",slug:"/declarative",permalink:"/react-native-reanimated/docs/1.x.x/declarative",version:"1.x.x",sidebar_label:"Declarative Animation API",sidebar:"version-1.x.x/docs",previous:{title:"Getting started",permalink:"/react-native-reanimated/docs/1.x.x/getting_started"},next:{title:"Examples",permalink:"/react-native-reanimated/docs/1.x.x/examples"}},c=[{value:"Backward compatible API",id:"backward-compatible-api",children:[]}],l={toc:c};function d(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Invoking animation differs from the way it is done when using the original ",Object(r.b)("inlineCode",{parentName:"p"},"Animated")," API.\nHere, instead of having animation objects we operate on nodes that can perform single animation steps.\nIn order to map an animation into a value, we will make the value to be assigned to a node that among few other things will call into the animation step node. Check ",Object(r.b)("a",{parentName:"p",href:"/react-native-reanimated/docs/1.x.x/animations/timing"},Object(r.b)("inlineCode",{parentName:"a"},"timing")),", ",Object(r.b)("a",{parentName:"p",href:"/react-native-reanimated/docs/1.x.x/animations/decay"},Object(r.b)("inlineCode",{parentName:"a"},"decay"))," and ",Object(r.b)("a",{parentName:"p",href:"/react-native-reanimated/docs/1.x.x/animations/spring"},Object(r.b)("inlineCode",{parentName:"a"},"spring"))," nodes documentation for some details about how animation step nodes can be configured."),Object(r.b)("p",null,"The example below shows a component that renders:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"import Animated, { Easing } from 'react-native-reanimated';\n\nconst {\n  Clock,\n  Value,\n  set,\n  cond,\n  startClock,\n  clockRunning,\n  timing,\n  debug,\n  stopClock,\n  block,\n} = Animated;\n\nfunction runTiming(clock, value, dest) {\n  const state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0),\n  };\n\n  const config = {\n    duration: 5000,\n    toValue: new Value(0),\n    easing: Easing.inOut(Easing.ease),\n  };\n\n  return block([\n    cond(\n      clockRunning(clock),\n      [\n        // if the clock is already running we update the toValue, in case a new dest has been passed in\n        set(config.toValue, dest),\n      ],\n      [\n        // if the clock isn't running we reset all the animation params and start the clock\n        set(state.finished, 0),\n        set(state.time, 0),\n        set(state.position, value),\n        set(state.frameTime, 0),\n        set(config.toValue, dest),\n        startClock(clock),\n      ]\n    ),\n    // we run the step here that is going to update position\n    timing(clock, state, config),\n    // if the animation is over we stop the clock\n    cond(state.finished, debug('stop clock', stopClock(clock))),\n    // we made the block return the updated position\n    state.position,\n  ]);\n}\n\nexport class AnimatedBox extends Component {\n  // we create a clock node\n  clock = new Clock();\n  // and use runTiming method defined above to create a node that is going to be mapped\n  // to the translateX transform.\n  transX = runTiming(this.clock, -120, 120);\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Animated.View\n          style={[styles.box, { transform: [{ translateX: this.transX }] }]}\n        />\n      </View>\n    );\n  }\n}\n")),Object(r.b)("h2",{id:"backward-compatible-api"},"Backward compatible API"),Object(r.b)("p",null,"As it might sometimes be impractical to use the API above, there's an alternative way of invoking animation, which is similar to the original ",Object(r.b)("inlineCode",{parentName:"p"},"Animated")," API."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'class Example extends Component {\n  constructor(props) {\n    super(props);\n    this._transX = new Value(0);\n    this._config = {\n      duration: 5000,\n      toValue: 120,\n      easing: Easing.inOut(Easing.ease),\n    };\n    this._anim = timing(this._transX, this._config);\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Animated.View\n          style={[styles.box, { transform: [{ translateX: this._transX }] }]}\n        />\n        <Button\n          onPress={() => {\n            this._anim.start();\n          }}\n          title="Start"\n        />\n      </View>\n    );\n  }\n}\n')),Object(r.b)("p",null,"This API gives the possibility to use animation with original ",Object(r.b)("inlineCode",{parentName:"p"},"Animated")," API. It's also a way of running animation on some interaction without necessity or rerendering view."))}d.isMDXComponent=!0},346:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return b}));var a=t(0),i=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),d=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=d(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=d(t),u=a,b=m["".concat(o,".").concat(u)]||m[u]||p[u]||r;return t?i.a.createElement(b,s(s({ref:n},l),{},{components:t})):i.a.createElement(b,s({ref:n},l))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<r;l++)o[l]=t[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);